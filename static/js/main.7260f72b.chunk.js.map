{"version":3,"sources":["components/Jumbotron/index.js","utils/APIcalls.js","components/Grid/index.js","components/List/index.js","components/Form/index.js","pages/search.js","components/Results/results.js","components/RenderBooks/RenderBooks.js","pages/savedBooks.js","components/Nav/index.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","_ref","children","react_default","a","createElement","style","height","clear","paddingTop","marginTop","textAlign","className","APIcalls","search","bookInfo","title","author","URL","concat","axios","get","getBooks","searchBook","id","saveBook","post","deleteBook","delete","Container","fluid","Row","_ref2","Col","_ref3","size","split","map","join","List","ListItem","Input","props","Object","assign","FormBtn","float","marginBottom","Books","state","books","loadBooks","e","preventDefault","_this$state","_this","console","log","API","then","res","setState","data","items","catch","err","event","_event$target","target","name","value","this","defineProperty","i","length","matchedBook","savedBook","volumeInfo","authors","url","infoLink","img","imageLinks","smallThumbnail","description","searchInfo","textSnippet","_this2","components_Jumbotron","onChange","updateInputs","placeholder","onClick","book","key","src","alt","href","Component","Results","RenderNewBook","saveOrDelete","image","link","styles","alignment","Saved","savedBooks","getAttribute","Results_results","RenderBooks_RenderBooks","_id","bind","React","Nav","App","react_router_dom","components_Nav","react_router","exact","path","component","Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7260f72b.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 100, clear: \"both\", paddingTop: 25, marginTop: 10, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import axios from \"axios\";\r\n\r\n// Set up the API key and search URL as constants \r\nconst API = \"AIzaSyCrflNWeNSyoEZ4-Lb7tasEYind3T2VZwg\";\r\nconst URL = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\n\r\n\r\n// create function to take in a query, manipulate it into the format accepted by the API query, \r\n// and perform an axios.get function using the query input\r\n\r\nexport default {\r\n    search: function(bookInfo) {\r\n        const { title, author } = bookInfo;\r\n        const URL = `https://www.googleapis.com/books/v1/volumes?q=intitle=${title}&inauthor=${author}&key=${API}`;\r\n        return axios.get(URL)\r\n    },\r\n    // Returns all books\r\n    getBooks: function() {\r\n        return axios.get(\"/api/books\");\r\n    },\r\n    // Searches for a book with a specirif ID\r\n    searchBook: function(id) {\r\n        return axios.get(\"/api/books/\" + id);\r\n    },\r\n    // Saves book\r\n    saveBook: function(bookInfo) {\r\n        return axios.post(\"/api/books\", bookInfo);\r\n    },\r\n    // Deletes book\r\n    deleteBook: function(id) {\r\n        return axios.delete(\"/api/books/\" + id);\r\n  }  \r\n};","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/APIcalls\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\n\r\nclass Books extends Component {\r\n  state = {\r\n    title: '',\r\n    author: '',\r\n    books: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.loadBooks();\r\n  }\r\n\r\n  updateInputs(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n        [name]: value,\r\n    });\r\n  }\r\n\r\n\r\n  loadBooks = (e) => {\r\n    e.preventDefault();\r\n    const { title, author } = this.state;\r\n    console.log('title: ', title);\r\n    console.log('author: ', author);\r\n    API.search({title, author})\r\n      .then(res => {console.log(res)\r\n        this.setState({ \r\n        books: res.data.items\r\n      })\r\n      console.log(this.state.books)\r\n    })\r\n    .catch(err => console.log(err));\r\n  };\r\n\r\n  saveBook(id) {\r\n    console.log(id)\r\n    console.log(this.state.books)\r\n    for(var i = 0; i<this.state.books.length; i++){\r\n      if(this.state.books[i].id === id){\r\n        let matchedBook = this.state.books[i]\r\n        console.log(matchedBook)\r\n        let savedBook = {}\r\n        savedBook.author = matchedBook.volumeInfo.authors[0]\r\n        savedBook.title = matchedBook.volumeInfo.title\r\n        savedBook.url = matchedBook.volumeInfo.infoLink\r\n        savedBook.img = matchedBook.volumeInfo.imageLinks.smallThumbnail\r\n        savedBook.description = matchedBook.searchInfo.textSnippet\r\n        console.log(savedBook)\r\n        API.saveBook(savedBook)\r\n        .then(res => console.log(res))\r\n        .catch(err => console.log(err))\r\n        break;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  // saveBook = event => {\r\n  //   let book = {}\r\n  //   book.author = event.target.getAttribute('author')\r\n  //   book.title = event.target.getAttribute('title')\r\n  //   book.image = event.target.getAttribute('image')\r\n  //   book.description = event.target.getAttribute('description')\r\n  //   console.log(book)\r\n  //   API.saveBook(book)\r\n  //     .then(res => console.log(res))\r\n  //     .catch(err => console.log(err))\r\n  // }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-6\">\r\n            <Jumbotron>\r\n              <h1>What Book Do You Want to Search For?</h1>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input onChange={ (e) => this.updateInputs(e)} name=\"title\" placeholder=\"Title (required)\" />\r\n              <Input onChange={ (e) => this.updateInputs(e)} name=\"author\" placeholder=\"Author (required)\" />\r\n              <FormBtn onClick={ (e) => this.loadBooks(e)} >Submit Book</FormBtn>\r\n            </form>\r\n          </Col>\r\n          <Col size=\"md-6 sm-12\">\r\n            <Jumbotron>\r\n              <h1>Google Book Results</h1>\r\n            </Jumbotron>\r\n            {this.state.books.length ? (\r\n              <List>\r\n                {this.state.books.map(book => (\r\n                  <ListItem key={book.id}>\r\n                    <img src={book.volumeInfo.imageLinks.smallThumbnail} alt={book.volumeInfo.title}/>\r\n                    <a href={book.volumeInfo.infoLink}>\r\n                      <strong>\r\n                        {book.volumeInfo.title} by {book.volumeInfo.authors[0]}\r\n                      </strong> \r\n                    </a>\r\n                    {book.searchInfo.textSnippet}\r\n                    <button onClick={() => this.saveBook(book.id)}>Save</button>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Books;\r\n","import React from 'react'\r\nimport './results.css'\r\n\r\nfunction Results(props) {\r\n  return (\r\n    <div className=\"container results-container\">\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Results","import React from 'react'\r\nimport './RenderBooks.css'\r\n\r\nfunction RenderNewBook(props) {\r\n  return (\r\n    <div className=\"container bookitem\">\r\n      <div className=\"row booktop\">\r\n        <div className=\"col-9 bookinfo\">\r\n          <h5><strong>{props.title}</strong></h5>\r\n          <p>Written by: {props.author}</p>\r\n        </div>\r\n        <div className=\"col-3 bookbtns\">\r\n          {props.saveOrDelete === \"save\" ? \r\n            <button \r\n              className=\"btn btn-success\"\r\n              author={props.author}\r\n              title={props.title}\r\n              description={props.description}\r\n              image={props.image}\r\n              onClick={props.saveBook}\r\n              >Save\r\n            </button> \r\n          : \"\"}\r\n          {props.saveOrDelete === \"delete\" ? \r\n            <button \r\n              className=\"btn btn-danger\"\r\n              id={props.id}\r\n              onClick={props.deleteBook}\r\n              >Delete\r\n            </button>\r\n          : \"\"}\r\n          <a href={props.link} className=\"view\"><button className=\"btn btn-primary\">View</button></a>\r\n        </div>\r\n      </div>\r\n      <hr/>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 bookbottom\">\r\n          <img className=\"bookimg\" alt={props.title} src={props.image}></img>\r\n          <p className=\"booksummary\">{props.description}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default RenderNewBook","import React from \"react\";\r\nimport API from \"../utils/APIcalls\";\r\nimport Results from \"../components/Results/results\"\r\nimport RenderBooks from '../components/RenderBooks/RenderBooks'\r\n\r\nconst styles = {\r\n  alignment: {\r\n    textAlign: \"center\"\r\n  }\r\n}\r\n\r\nclass Saved extends React.Component {\r\n  state = {\r\n    savedBooks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadBooks();\r\n  }\r\n\r\n  loadBooks = () => {\r\n    API.getBooks()\r\n    .then(res => {\r\n      this.setState({savedBooks: res.data})\r\n      console.log(res)\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  deleteBook = event => {\r\n    console.log(event.target)\r\n    let id = event.target.getAttribute('id')\r\n    console.log(id)\r\n    API.deleteBook(id)\r\n      .then(res => this.loadBooks())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Results>\r\n        {this.state.savedBooks.length === 0 ? <h1 style={styles.alignment}>Search for a Book!</h1> : \r\n            this.state.savedBooks.map((book,i) => (\r\n              <RenderBooks\r\n                key={i}\r\n                id={book._id}\r\n                saveOrDelete={\"delete\"}\r\n                author={book.author}\r\n                link={book.link}\r\n                title={book.title}\r\n                image={book.image}\r\n                description={book.description}\r\n                deleteBook={this.deleteBook.bind(this)}\r\n              />\r\n            ))\r\n          }   \r\n        </Results>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Saved;","import React from \"react\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Google Book Search\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport Search from \"./pages/search\";\nimport Saved from \"./pages/savedBooks\";\nimport Nav from './components/Nav/index';\n// import Header from './components/header/header'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav/>\n          {/* <Header>Google Book Search</Header> */}\n          <Switch>\n            <Route exact path=\"/\" component={Search}></Route>\n            <Route exact path=\"/search\" component={Search}></Route>\n            <Route exact path=\"/saved\" component={Saved}></Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}